@ Este es un programa de prueba correctamente formateado

{ Este es un comentario
  de múltiples líneas }

int factorial ʃ int n ʅ \
    if ʃ n == 0 ʅ \
        return 1?
    /
    else \
        return n * factorial ʃ n - 1 ʅ?
    /
/

float power ʃ float base, int exp ʅ \
    float result | 1.0?
    
    ? ʃ int i | 0? i < exp? i++ ʅ \
        result | result * base?
    /
    
    return result?
/

void main ʃ ʅ \
    int num | 5?
    float base | 2.5?
    int exp | 3?
    
    @ Probando el factorial
    write ʃ "El factorial de "ʅ?
    write ʃ num ʅ?
    write ʃ " es " ʅ?
    write ʃ factorial ʃ num ʅ ʅ?
    
    @ Probando potencia
    write ʃ "El resultado de " ʅ?
    write ʃ base ʅ?
    write ʃ " elevado a " ʅ?
    write ʃ exp ʅ?
    write ʃ " es " ʅ?
    write ʃ power ʃ base, exp ʅ ʅ?
    
    @ Probando switch
    int option | 2?
    
    switch ʃ option ʅ \
        case 1: 
            write ʃ "Opción 1 seleccionada" ʅ?
            break?
        case 2:
            write ʃ "Opción 2 seleccionada" ʅ?
            break?
        default:
            write ʃ "Opción desconocida" ʅ?
    /
    
    @ Probando operadores lógicos
    bool a | luna?  @ true
    bool b | sol?   @ false
    
    if ʃ a ^ !b ʅ \
        write ʃ "Operador AND funciona correctamente" ʅ?
    /
    
    if ʃ a # b ʅ \
        write ʃ "Operador OR funciona correctamente" ʅ?
    /
    
    @ Probando operadores aritméticos
    int x | 10?
    int y | 3?
    
    write ʃ "x + y = " ʅ?
    write ʃ x + y ʅ?
    
    write ʃ "x - y = " ʅ?
    write ʃ x - y ʅ?
    
    write ʃ "x * y = " ʅ?
    write ʃ x * y ʅ?
    
    write ʃ "x // y = " ʅ?
    write ʃ x // y ʅ?
    
    write ʃ "x ~ y = " ʅ?
    write ʃ x ~ y ʅ?
    
    write ʃ "x ** y = " ʅ?
    write ʃ x ** y ʅ?
    
    @ Probando do-while
    int counter | 0?
    do \
        write ʃ "Contador: " ʅ?
        write ʃ counter ʅ?
        counter++?
    / while ʃ counter < 5 ʅ?
/